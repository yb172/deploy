name: Promote image to production
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image Tag to Promote'
        required: true

env:
  PROJECT_ID: 'windy-orb-218701'
  REGION: 'us-central1'
  DOCKER_REPO: 'deploydocus'
  DEMO_DOCKER_IMAGE_NAME: 'deploydocus-demo'
  PROD_DOCKER_IMAGE_NAME: 'deploydocus'
  CLOUD_RUN_SERVICE: 'deploydocus'
        
jobs:
  retag:
    environment: demo
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      prod_image_name: ${{ steps.generate-image-name.outputs.prod_image_name }}
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.SERVICE_ACCOUNT}}'
          token_format: 'access_token'
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'
      - name: Generate image name
        id: generate-image-name
        run: echo "image_name=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DEMO_DOCKER_IMAGE_NAME }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT
      - name: Generate image name
        id: generate-prod-image-name
        run: echo "prod_image_name=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.PROD_DOCKER_IMAGE_NAME }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT
      - name: Pull Image from Demo
        run: |
          docker pull ${{ steps.generate-image-name.outputs.image_name }}
      - name: Retag & Push to Production
        run: |
          docker tag ${{ steps.generate-image-name.outputs.image_name }} ${{ steps.generate-image-name.outputs.prod_image_name }}
          docker push ${{ steps.generate-image-name.outputs.prod_image_name }}

  deploy:
    needs: retag
    environment: demo
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.SERVICE_ACCOUNT}}'
          token_format: 'access_token'
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.CLOUD_RUN_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ needs.retag.outputs.prod_image_name }}'
